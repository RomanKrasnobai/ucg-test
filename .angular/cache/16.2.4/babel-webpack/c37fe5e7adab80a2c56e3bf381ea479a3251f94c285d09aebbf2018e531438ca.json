{"ast":null,"code":"import { EMPTY, merge, takeUntil } from \"rxjs\";\nimport { ControlErrorComponent } from \"../shared-components/control-error/control-error.component\";\nimport { FORM_ERRORS } from \"../helpers/tokens/form-errors\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./control-error-container.directive\";\nimport * as i2 from \"./form-submit.directive\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../services/on-destroy.service\";\nexport class ControlErrorsDirective {\n  constructor(vcr, resolver, controlErrorContainer, errors, form, controlDir, onDestroy$) {\n    this.vcr = vcr;\n    this.resolver = resolver;\n    this.errors = errors;\n    this.form = form;\n    this.controlDir = controlDir;\n    this.onDestroy$ = onDestroy$;\n    this.customErrors = {};\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\n  }\n  ngOnInit() {\n    merge(\n    // @ts-ignore\n    this.submit$, this.control?.valueChanges).pipe(takeUntil(this.onDestroy$)).subscribe(v => {\n      const controlErrors = this.control?.errors;\n      if (controlErrors) {\n        const firstKey = Object.keys(controlErrors)[0];\n        const getError = this.errors[firstKey];\n        const text = this.customErrors[firstKey] || getError(controlErrors[firstKey]);\n        this.setError(text);\n      } else if (this.ref) {\n        this.setError(null);\n      }\n    });\n  }\n  get control() {\n    return this.controlDir.control;\n  }\n  setError(text) {\n    if (!this.ref) {\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\n      this.ref = this.container.createComponent(factory);\n    }\n    this.ref.instance.text = text;\n  }\n  static #_ = this.ɵfac = function ControlErrorsDirective_Factory(t) {\n    return new (t || ControlErrorsDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i1.ControlErrorContainerDirective, 8), i0.ɵɵdirectiveInject(FORM_ERRORS), i0.ɵɵdirectiveInject(i2.FormSubmitDirective, 9), i0.ɵɵdirectiveInject(i3.NgControl), i0.ɵɵdirectiveInject(i4.OnDestroyService));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ControlErrorsDirective,\n    selectors: [[\"\", \"formControl\", \"\"], [\"\", \"formControlName\", \"\"]],\n    inputs: {\n      customErrors: \"customErrors\"\n    },\n    standalone: true\n  });\n}","map":{"version":3,"names":["EMPTY","merge","takeUntil","ControlErrorComponent","FORM_ERRORS","ControlErrorsDirective","constructor","vcr","resolver","controlErrorContainer","errors","form","controlDir","onDestroy$","customErrors","container","submit$","ngOnInit","control","valueChanges","pipe","subscribe","v","controlErrors","firstKey","Object","keys","getError","text","setError","ref","factory","resolveComponentFactory","createComponent","instance","_","i0","ɵɵdirectiveInject","ViewContainerRef","ComponentFactoryResolver","i1","ControlErrorContainerDirective","i2","FormSubmitDirective","i3","NgControl","i4","OnDestroyService","_2","selectors","inputs","standalone"],"sources":["/Users/romankrasnobai/Documents/programming-pet-projects/ucg-test/src/app/directives/control-errors.directive.ts"],"sourcesContent":["import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive, Host,\n  Inject,\n  Input, OnInit,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport {EMPTY, merge, Observable, takeUntil} from \"rxjs\";\nimport {ControlErrorComponent} from \"../shared-components/control-error/control-error.component\";\nimport {ControlErrorContainerDirective} from \"./control-error-container.directive\";\nimport {NgControl} from \"@angular/forms\";\nimport {FORM_ERRORS} from \"../helpers/tokens/form-errors\";\nimport {FormSubmitDirective} from \"./form-submit.directive\";\nimport {OnDestroyService} from \"../services/on-destroy.service\";\n\n@Directive({\n  selector: '[formControl], [formControlName]',\n  standalone: true,\n})\nexport class ControlErrorsDirective implements OnInit {\n  ref: ComponentRef<ControlErrorComponent>;\n  container: ViewContainerRef;\n  submit$: Observable<any>;\n\n  @Input() customErrors: any = {};\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private resolver: ComponentFactoryResolver,\n    @Optional() controlErrorContainer: ControlErrorContainerDirective,\n    @Inject(FORM_ERRORS) private errors: any,\n    @Optional() @Host() private form: FormSubmitDirective,\n    private controlDir: NgControl,\n    private onDestroy$: OnDestroyService,\n  ) {\n    this.container = controlErrorContainer ? controlErrorContainer.vcr : vcr;\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\n  }\n\n  ngOnInit() {\n    merge(\n      // @ts-ignore\n      this.submit$,\n      this.control?.valueChanges\n    ).pipe(\n      takeUntil(this.onDestroy$)\n    ).subscribe((v) => {\n        const controlErrors = this.control?.errors;\n        if (controlErrors) {\n          const firstKey = Object.keys(controlErrors)[0];\n          const getError = this.errors[firstKey];\n          const text = this.customErrors[firstKey] || getError(controlErrors[firstKey]);\n          this.setError(text);\n        } else if (this.ref) {\n          this.setError(null);\n        }\n    })\n  }\n\n  get control() {\n    return this.controlDir.control;\n  }\n\n  setError(text: string | null) {\n    if (!this.ref) {\n      const factory = this.resolver.resolveComponentFactory(ControlErrorComponent);\n      this.ref = this.container.createComponent(factory);\n    }\n\n    this.ref.instance.text = text;\n  }\n}\n"],"mappings":"AASA,SAAQA,KAAK,EAAEC,KAAK,EAAcC,SAAS,QAAO,MAAM;AACxD,SAAQC,qBAAqB,QAAO,4DAA4D;AAGhG,SAAQC,WAAW,QAAO,+BAA+B;;;;;;AAQzD,OAAM,MAAOC,sBAAsB;EAOjCC,YACUC,GAAqB,EACrBC,QAAkC,EAC9BC,qBAAqD,EACpCC,MAAW,EACZC,IAAyB,EAC7CC,UAAqB,EACrBC,UAA4B;IAN5B,KAAAN,GAAG,GAAHA,GAAG;IACH,KAAAC,QAAQ,GAARA,QAAQ;IAEa,KAAAE,MAAM,GAANA,MAAM;IACP,KAAAC,IAAI,GAAJA,IAAI;IACxB,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,UAAU,GAAVA,UAAU;IATX,KAAAC,YAAY,GAAQ,EAAE;IAW7B,IAAI,CAACC,SAAS,GAAGN,qBAAqB,GAAGA,qBAAqB,CAACF,GAAG,GAAGA,GAAG;IACxE,IAAI,CAACS,OAAO,GAAG,IAAI,CAACL,IAAI,GAAG,IAAI,CAACA,IAAI,CAACK,OAAO,GAAGhB,KAAK;EACtD;EAEAiB,QAAQA,CAAA;IACNhB,KAAK;IACH;IACA,IAAI,CAACe,OAAO,EACZ,IAAI,CAACE,OAAO,EAAEC,YAAY,CAC3B,CAACC,IAAI,CACJlB,SAAS,CAAC,IAAI,CAACW,UAAU,CAAC,CAC3B,CAACQ,SAAS,CAAEC,CAAC,IAAI;MACd,MAAMC,aAAa,GAAG,IAAI,CAACL,OAAO,EAAER,MAAM;MAC1C,IAAIa,aAAa,EAAE;QACjB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAMI,QAAQ,GAAG,IAAI,CAACjB,MAAM,CAACc,QAAQ,CAAC;QACtC,MAAMI,IAAI,GAAG,IAAI,CAACd,YAAY,CAACU,QAAQ,CAAC,IAAIG,QAAQ,CAACJ,aAAa,CAACC,QAAQ,CAAC,CAAC;QAC7E,IAAI,CAACK,QAAQ,CAACD,IAAI,CAAC;OACpB,MAAM,IAAI,IAAI,CAACE,GAAG,EAAE;QACnB,IAAI,CAACD,QAAQ,CAAC,IAAI,CAAC;;IAEzB,CAAC,CAAC;EACJ;EAEA,IAAIX,OAAOA,CAAA;IACT,OAAO,IAAI,CAACN,UAAU,CAACM,OAAO;EAChC;EAEAW,QAAQA,CAACD,IAAmB;IAC1B,IAAI,CAAC,IAAI,CAACE,GAAG,EAAE;MACb,MAAMC,OAAO,GAAG,IAAI,CAACvB,QAAQ,CAACwB,uBAAuB,CAAC7B,qBAAqB,CAAC;MAC5E,IAAI,CAAC2B,GAAG,GAAG,IAAI,CAACf,SAAS,CAACkB,eAAe,CAACF,OAAO,CAAC;;IAGpD,IAAI,CAACD,GAAG,CAACI,QAAQ,CAACN,IAAI,GAAGA,IAAI;EAC/B;EAAC,QAAAO,CAAA,G;qBAnDU9B,sBAAsB,EAAA+B,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,gBAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,wBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,8BAAA,MAAAL,EAAA,CAAAC,iBAAA,CAWvBjC,WAAW,GAAAgC,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,mBAAA,MAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,SAAA,GAAAT,EAAA,CAAAC,iBAAA,CAAAS,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAXV3C,sBAAsB;IAAA4C,SAAA;IAAAC,MAAA;MAAApC,YAAA;IAAA;IAAAqC,UAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}